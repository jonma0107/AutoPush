1. probar implementacion de trackeum (DONE) 
voy a desplegar en tal test, algo que no está en develop sino en la rama feature/RF
necesitamos desplegar la funcionalidad de xxxx en tal test, algo que no está en develop sino en la rama feature/RF

2. Pendiente Version 2 : (DONE)
guardar en paquetes distintos en el S3 de acuerdo a la categoría, osea cargar en el bucket pero que se guarde en diferente carpeta según la categoría
Nota: está pendiente por confirmar si se guarda en zip

****************************************************************************************************************************************************

- Predicción de reingresos hospitalarios (LLM)

-Monitoreo remoto de pacientes., o RPM, es una herramienta común de atención médica que ayuda a los médicos a supervisar a pacientes con enfermedades crónicas o de corta duración que viven en áreas remotas. (LLM) 

***************************************************************************************************************************************************

LIMPIAR CÓDIGO sfv_colsubsidio/api_reports/reports/tasks/task_send_reports.py
porque está dependiendo de mailchimp
api_report (submódulo) dependiendo de mailchimp y core
OJO QUE TIENE UNA VARIABLE LLAMADA trackeum_service

*****************************************************************************

ASINCRONISMO EN MASSIVE LOAD PARA CARGUE DE ARCHIVOS CON REGISTROS MASIVOS

*****************************************************************************

Pasos para ejecutar los comandos en tu ambiente:

- Stage a usar: rimac_test_us_east_2
- Verifica la variable FERNET_KEY, Revisa que en la sección:
"rimac_test_us_east_2": {
  "environment_variables": {
    ...
    "FERNET_KEY": "08N...."
  }
}
- Comando para encriptar:
  zappa manage rimac_test_us_east_2 "encrypt_data"
-Comando para desencriptar:
  zappa manage rimac_test_us_east_2 "decrypt_data"

El comando se ejecutará en el entorno Lambda de ese stage, con las variables de entorno y configuración de ese ambiente.

******************************************************

¿Qué hace esta línea de código?

if (
    isinstance(field, models.CharField)
    and field.max_length is not None
    and field.max_length < 128
):
    continue
    
Explicación:
Evita encriptar campos CharField que tengan un max_length menor a 128.
Es decir, si tienes un campo con max_length=20, este campo NO será encriptado ni desencriptado por los comandos.

Esto se hace para evitar encriptar campos que probablemente sean IDs, códigos cortos, etc., donde la encriptación puede causar problemas de longitud o de lógica de negocio.

¿Por qué?
Un valor encriptado con Fernet es mucho más largo que el original.
Si encriptaras un campo de 20 caracteres, el valor encriptado no cabría en el campo de la base de datos y causaría errores.


******************************************************************





    



